/*
 * $QNXLicenseC:
 * Copyright 2011, QNX Software Systems. 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"). You 
 * may not reproduce, modify or distribute this software except in 
 * compliance with the License. You may obtain a copy of the License 
 * at: http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" basis, 
 * WITHOUT WARRANTIES OF ANY KIND, either express or implied.
 *
 * This file may contain contributions from others, either as 
 * contributors under the License or as licensors under other terms.  
 * Please review this entire file for other proprietary rights or license 
 * notices, as well as the QNX Development Suite License Guide at 
 * http://licensing.qnx.com/license-guide/ for other information.
 * $
 */

#include "ipl_mx6x.h"
#include <arm/mx6x.h>

#define DCD_ENTRY(entry, address, value)   \
dcd_entry_##entry:                        \
        .word LE_2_BE_32(address) ;     \
        .word LE_2_BE_32(value)  ;     \

.section ".text.imageheader", "x"
start:
    b _start     
	.org	IVT_OFFSET

ivt_header:       .word 0x402000D1 /* Tag = 0xD1, Length = 0x0020 (32 bytes), Version = 0x40 */
entry:			  .word _start
reserved1:        .word 0x0
dcd_ptr:          .word dcd_hdr
boot_data_ptr:	  .word boot_data
self_ptr:         .word ivt_header
csf:			  .word 0x0
reserved2:        .word 0x0

/* IPL Destination addr. Should be identical to the definition in ld file */
boot_data:        .word start
image_len:        .word _ecopy - start
plugin:           .word 0x0

.ifdef VARIANT_enableTZASC
dcd_hdr:          .word 0x40F802D2 /* Tag=0xD2, Len=94*8 + 4 + 4, Ver=0x40 */
write_dcd_cmd:    .word 0x04F402CC /* Tag=0xCC, Len=94*8 + 4, Param=0x04 */
.else
dcd_hdr:          .word 0x40F002D2 /* Tag=0xD2, Len=93*8 + 4 + 4, Ver=0x40 */
write_dcd_cmd:    .word 0x04EC02CC /* Tag=0xCC, Len=93*8 + 4, Param=0x04 */
.endif

/* Device Configuration Data */
DCD_ENTRY(1, MX6X_IOMUXC_BASE + 0x5a8, 0x00000030)
DCD_ENTRY(2, MX6X_IOMUXC_BASE + 0x5b0, 0x00000030)
DCD_ENTRY(3, MX6X_IOMUXC_BASE + 0x524, 0x00000030)
DCD_ENTRY(4, MX6X_IOMUXC_BASE + 0x51c, 0x00000030)

DCD_ENTRY(5, MX6X_IOMUXC_BASE + 0x518, 0x00000030)
DCD_ENTRY(6, MX6X_IOMUXC_BASE + 0x50c, 0x00000030)
DCD_ENTRY(7, MX6X_IOMUXC_BASE + 0x5b8, 0x00000030)
DCD_ENTRY(8, MX6X_IOMUXC_BASE + 0x5c0, 0x00000030)

DCD_ENTRY(9, MX6X_IOMUXC_BASE + 0x5ac, 0x00020030)  
DCD_ENTRY(10, MX6X_IOMUXC_BASE + 0x5b4, 0x00020030)
DCD_ENTRY(11, MX6X_IOMUXC_BASE + 0x528, 0x00020030)
DCD_ENTRY(12, MX6X_IOMUXC_BASE + 0x520, 0x00020030)

DCD_ENTRY(13, MX6X_IOMUXC_BASE + 0x514, 0x00020030)
DCD_ENTRY(14, MX6X_IOMUXC_BASE + 0x510, 0x00020030)
DCD_ENTRY(15, MX6X_IOMUXC_BASE + 0x5bc, 0x00020030)
DCD_ENTRY(16, MX6X_IOMUXC_BASE + 0x5c4, 0x00020030)

DCD_ENTRY(17, MX6X_IOMUXC_BASE + 0x56c, 0x00020030)
DCD_ENTRY(18, MX6X_IOMUXC_BASE + 0x578, 0x00020030)
DCD_ENTRY(19, MX6X_IOMUXC_BASE + 0x588, 0x00020030)
DCD_ENTRY(20, MX6X_IOMUXC_BASE + 0x594, 0x00020030)

DCD_ENTRY(21, MX6X_IOMUXC_BASE + 0x57c, 0x00020030)
DCD_ENTRY(22, MX6X_IOMUXC_BASE + 0x590, 0x00003000)
DCD_ENTRY(23, MX6X_IOMUXC_BASE + 0x598, 0x00003000)
DCD_ENTRY(24, MX6X_IOMUXC_BASE + 0x58c, 0x00000000)

DCD_ENTRY(25, MX6X_IOMUXC_BASE + 0x59c, 0x00003030)
DCD_ENTRY(26, MX6X_IOMUXC_BASE + 0x5a0, 0x00003030)
DCD_ENTRY(27, MX6X_IOMUXC_BASE + 0x784, 0x00000030)
DCD_ENTRY(28, MX6X_IOMUXC_BASE + 0x788, 0x00000030)

DCD_ENTRY(29, MX6X_IOMUXC_BASE + 0x794, 0x00000030)
DCD_ENTRY(30, MX6X_IOMUXC_BASE + 0x79c, 0x00000030)
DCD_ENTRY(31, MX6X_IOMUXC_BASE + 0x7a0, 0x00000030)
DCD_ENTRY(32, MX6X_IOMUXC_BASE + 0x7a4, 0x00000030)

DCD_ENTRY(33, MX6X_IOMUXC_BASE + 0x7a8, 0x00000030)
DCD_ENTRY(34, MX6X_IOMUXC_BASE + 0x748, 0x00000030)
DCD_ENTRY(35, MX6X_IOMUXC_BASE + 0x74c, 0x00000030)
DCD_ENTRY(36, MX6X_IOMUXC_BASE + 0x750, 0x00020000)

DCD_ENTRY(37, MX6X_IOMUXC_BASE + 0x758, 0x00000000)
DCD_ENTRY(38, MX6X_IOMUXC_BASE + 0x774, 0x00020000)
DCD_ENTRY(39, MX6X_IOMUXC_BASE + 0x78c, 0x00000030)
DCD_ENTRY(40, MX6X_IOMUXC_BASE + 0x798, 0x000C0000)

/* DDR3 memory */
DCD_ENTRY(41, MX6X_MMDC_P0_BASE + 0x81c, 0x33333333)
DCD_ENTRY(42, MX6X_MMDC_P0_BASE + 0x820, 0x33333333)
DCD_ENTRY(43, MX6X_MMDC_P0_BASE + 0x824, 0x33333333)
DCD_ENTRY(44, MX6X_MMDC_P0_BASE + 0x828, 0x33333333)

DCD_ENTRY(45, MX6X_MMDC_P1_BASE + 0x81c, 0x33333333) 
DCD_ENTRY(46, MX6X_MMDC_P1_BASE + 0x820, 0x33333333)
DCD_ENTRY(47, MX6X_MMDC_P1_BASE + 0x824, 0x33333333)
DCD_ENTRY(48, MX6X_MMDC_P1_BASE + 0x828, 0x33333333)

DCD_ENTRY(49, MX6X_MMDC_P0_BASE + 0x018, 0x00081740) 

DCD_ENTRY(50, MX6X_MMDC_P0_BASE + 0x01c, 0x00008000)
DCD_ENTRY(51, MX6X_MMDC_P0_BASE + 0x00c, 0x555A7975)
DCD_ENTRY(52, MX6X_MMDC_P0_BASE + 0x010, 0xFF538E64)
DCD_ENTRY(53, MX6X_MMDC_P0_BASE + 0x014, 0x01FF00DB)
DCD_ENTRY(54, MX6X_MMDC_P0_BASE + 0x02c, 0x000026D2)

DCD_ENTRY(55, MX6X_MMDC_P0_BASE + 0x030, 0x005B0E21)
DCD_ENTRY(56, MX6X_MMDC_P0_BASE + 0x008, 0x09444040)
DCD_ENTRY(57, MX6X_MMDC_P0_BASE + 0x004, 0x00025576)
DCD_ENTRY(58, MX6X_MMDC_P0_BASE + 0x040, 0x00000027)
DCD_ENTRY(59, MX6X_MMDC_P0_BASE + 0x000, 0x831A0000)

DCD_ENTRY(60, MX6X_MMDC_P0_BASE + 0x01c, 0x04088032)
DCD_ENTRY(61, MX6X_MMDC_P0_BASE + 0x01c, 0x0408803A)
DCD_ENTRY(62, MX6X_MMDC_P0_BASE + 0x01c, 0x00008033)
DCD_ENTRY(63, MX6X_MMDC_P0_BASE + 0x01c, 0x0000803B)
DCD_ENTRY(64, MX6X_MMDC_P0_BASE + 0x01c, 0x00428031)
DCD_ENTRY(65, MX6X_MMDC_P0_BASE + 0x01c, 0x00428039)
DCD_ENTRY(66, MX6X_MMDC_P0_BASE + 0x01c, 0x09408030)
DCD_ENTRY(67, MX6X_MMDC_P0_BASE + 0x01c, 0x09408038)

DCD_ENTRY(68, MX6X_MMDC_P0_BASE + 0x01c, 0x04008040)
DCD_ENTRY(69, MX6X_MMDC_P0_BASE + 0x01c, 0x04008048) 
DCD_ENTRY(70, MX6X_MMDC_P0_BASE + 0x800, 0xA1380003) 
DCD_ENTRY(71, MX6X_MMDC_P1_BASE + 0x800, 0xA1380003)
DCD_ENTRY(72, MX6X_MMDC_P0_BASE + 0x020, 0x00005800)  
DCD_ENTRY(73, MX6X_MMDC_P0_BASE + 0x818, 0x00022227)
DCD_ENTRY(74, MX6X_MMDC_P1_BASE + 0x818, 0x00022227)
DCD_ENTRY(75, MX6X_MMDC_P0_BASE + 0x83c, 0x42720306)
DCD_ENTRY(76, MX6X_MMDC_P0_BASE + 0x840, 0x026F0266)
DCD_ENTRY(77, MX6X_MMDC_P1_BASE + 0x83c, 0x4273030A)
DCD_ENTRY(78, MX6X_MMDC_P1_BASE + 0x840, 0x02740240)
DCD_ENTRY(79, MX6X_MMDC_P0_BASE + 0x848, 0x45393B3E)
DCD_ENTRY(80, MX6X_MMDC_P1_BASE + 0x848, 0x403A3747)
DCD_ENTRY(81, MX6X_MMDC_P0_BASE + 0x850, 0x40434541)
DCD_ENTRY(82, MX6X_MMDC_P1_BASE + 0x850, 0x473E4A3B)

DCD_ENTRY(83, MX6X_MMDC_P0_BASE + 0x80c, 0x0011000E)
DCD_ENTRY(84, MX6X_MMDC_P0_BASE + 0x810, 0x000E001B)

DCD_ENTRY(85, MX6X_MMDC_P1_BASE + 0x80c, 0x00190015)
DCD_ENTRY(86, MX6X_MMDC_P1_BASE + 0x810, 0x00070018)

DCD_ENTRY(87, MX6X_MMDC_P0_BASE + 0x8b8, 0x00000800)
DCD_ENTRY(88, MX6X_MMDC_P1_BASE + 0x8b8, 0x00000800)

DCD_ENTRY(89, MX6X_MMDC_P0_BASE + 0x01c, 0x00000000)
DCD_ENTRY(90, MX6X_MMDC_P0_BASE + 0x404, 0x00011006)

/* enable AXI cache for VDOA/VPU/IPU */
DCD_ENTRY(91, MX6X_IOMUXC_BASE + 0x010, 0xf00000ff)

/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
DCD_ENTRY(92, MX6X_IOMUXC_BASE + 0x018, 0x007f007f)
DCD_ENTRY(93, MX6X_IOMUXC_BASE + 0x01c, 0x007f007f)

.ifdef VARIANT_enableTZASC
DCD_ENTRY(94, MX6X_MMDC_P0_BASE + 0x400, 0x114201f0)
.endif
